<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="cosmosdb.Host" elementType="Argument">
            <stringProp name="Argument.name">cosmosdb.Host</stringProp>
            <stringProp name="Argument.value">**********.documents.azure.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cosmosdb.Key" elementType="Argument">
            <stringProp name="Argument.name">cosmosdb.Key</stringProp>
            <stringProp name="Argument.value">**************************************************************************************==</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cosmosdb.KeyType" elementType="Argument">
            <stringProp name="Argument.name">cosmosdb.KeyType</stringProp>
            <stringProp name="Argument.value">master</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="cosmosdb.TokenVersion" elementType="Argument">
            <stringProp name="Argument.name">cosmosdb.TokenVersion</stringProp>
            <stringProp name="Argument.value">1.0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="headers.x-ms-version" elementType="Argument">
            <stringProp name="Argument.name">headers.x-ms-version</stringProp>
            <stringProp name="Argument.value">2018-12-31</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${cosmosdb.Host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${request.path}</stringProp>
          <stringProp name="HTTPSampler.method">${request.method}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Request Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="288506510">cosmosdb.ResourceType</stringProp>
              <stringProp name="288252750">cosmosdb.ResourceLink</stringProp>
              <stringProp name="1257892900">request.path</stringProp>
              <stringProp name="1867076896">request.method</stringProp>
              <stringProp name="-929509962">headers.Content-Type</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1579502258">
                <stringProp name="3088955">docs</stringProp>
                <stringProp name="-862779863">dbs/SampleDB/colls/Persons</stringProp>
                <stringProp name="-1644652462">/dbs/SampleDB/colls/Persons/docs</stringProp>
                <stringProp name="70454">GET</stringProp>
                <stringProp name="-43840953">application/json</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Authorization Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1755781816">headers.x-ms-date</stringProp>
              <stringProp name="113873">sig</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1314711732">
                <stringProp name="-1985000326">${__time(EEE\, dd MMM yyyy HH:mm:ss &apos;GMT&apos;, Now)}</stringProp>
                <stringProp name="-554460324">${__lowercase(${request.method})}${__unescape(\n)}${cosmosdb.ResourceType}${__unescape(\n)}${cosmosdb.ResourceLink}${__unescape(\n)}${__lowercase(${__eval(${Now})})}${__unescape(\n)}${__unescape(\n)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="HmacSHA256" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import java.security.InvalidKeyException;
import java.util.Base64;

Mac mac = Mac.getInstance(&quot;HmacSHA256&quot;);
mac.init(new SecretKeySpec(Base64.getDecoder().decode(vars.get(&quot;cosmosdb.Key&quot;).getBytes()), &quot;HmacSHA256&quot;));
vars.put(&quot;sig&quot;, mac.doFinal(vars.get(&quot;sig&quot;).getBytes()).encodeBase64().toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-date</stringProp>
                <stringProp name="Header.value">${headers.x-ms-date}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-version</stringProp>
                <stringProp name="Header.value">${headers.x-ms-version}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${__urlencode(type=${cosmosdb.KeyType}&amp;ver=${cosmosdb.TokenVersion}&amp;sig=${sig})}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">${headers.Content-Type}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-max-item-count</stringProp>
                <stringProp name="Header.value">-1</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${request.body}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${cosmosdb.Host}</stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">${request.path}</stringProp>
          <stringProp name="HTTPSampler.method">${request.method}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Request Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="288506510">cosmosdb.ResourceType</stringProp>
              <stringProp name="288252750">cosmosdb.ResourceLink</stringProp>
              <stringProp name="1257892900">request.path</stringProp>
              <stringProp name="1867076896">request.method</stringProp>
              <stringProp name="-929509962">headers.Content-Type</stringProp>
              <stringProp name="1257488801">request.body</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="1188007936">
                <stringProp name="3088955">docs</stringProp>
                <stringProp name="-862779863">dbs/SampleDB/colls/Persons</stringProp>
                <stringProp name="-1644652462">/dbs/SampleDB/colls/Persons/docs</stringProp>
                <stringProp name="2461856">POST</stringProp>
                <stringProp name="1034968554">application/query+json</stringProp>
                <stringProp name="64377126">{&quot;query&quot;: &quot;SELECT * FROM c WHERE c.age = 23&quot;, &quot;parameters&quot;: []}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="Authorization Parameters" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1755781816">headers.x-ms-date</stringProp>
              <stringProp name="113873">sig</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1314711732">
                <stringProp name="-1985000326">${__time(EEE\, dd MMM yyyy HH:mm:ss &apos;GMT&apos;, Now)}</stringProp>
                <stringProp name="-554460324">${__lowercase(${request.method})}${__unescape(\n)}${cosmosdb.ResourceType}${__unescape(\n)}${cosmosdb.ResourceLink}${__unescape(\n)}${__lowercase(${__eval(${Now})})}${__unescape(\n)}${__unescape(\n)}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="HmacSHA256" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import java.security.InvalidKeyException;
import java.util.Base64;

Mac mac = Mac.getInstance(&quot;HmacSHA256&quot;);
mac.init(new SecretKeySpec(Base64.getDecoder().decode(vars.get(&quot;cosmosdb.Key&quot;).getBytes()), &quot;HmacSHA256&quot;));
vars.put(&quot;sig&quot;, mac.doFinal(vars.get(&quot;sig&quot;).getBytes()).encodeBase64().toString());</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-date</stringProp>
                <stringProp name="Header.value">${headers.x-ms-date}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-version</stringProp>
                <stringProp name="Header.value">${headers.x-ms-version}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">${__urlencode(type=${cosmosdb.KeyType}&amp;ver=${cosmosdb.TokenVersion}&amp;sig=${sig})}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">${headers.Content-Type}</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-max-item-count</stringProp>
                <stringProp name="Header.value">-1</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-documentdb-isquery</stringProp>
                <stringProp name="Header.value">true</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-ms-documentdb-query-enablecrosspartition</stringProp>
                <stringProp name="Header.value">true</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
